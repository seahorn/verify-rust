name: CI

on:
  push:
    branches: main
  pull_request:
    branches: main
  schedule:
    - cron: 0 0 * * *  # run every day at UTC 00:00

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        #verify_flag: ["", "--vac", "--cex"]
        verify_flag: [""]
        #ctest_flag: ["", "--label-exclude=\"skipvac\""]
        ctest_flag: [""]
        # exclude:
        #   - verify_flag: ""
        #     ctest_flag: "--label-exclude=\"skipvac\""
        #   - verify_flag: "--cex"
        #     ctest_flag: "--label-exclude=\"skipvac\""
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Get type
        id: type
        run: echo ::set-output name=type::$(echo ${{ matrix.verify_flag }} | awk '{ print substr($1,3,5) "" substr($2,22) }')

      - name: Get Ctest opt
        id: ctest_opt
        run: echo ::set-output name=type::$(echo ${{ matrix.ctest_flag }} | awk '{ print substr($1,3,5) "" substr($2,22) }')

      - name: Get exclude test
        id: exclude_files
        run: |
          if [ "${{ steps.type.outputs.type }}" = "" ]; then
            blacklist_file=".github/workflows/blacklist.txt"
          else
            blacklist_file=".github/workflows/blacklist.${{ steps.type.outputs.type }}.txt"
          fi
          (test -f "$blacklist_file" && echo ::set-output name=exclude_files::"($(cut -f 1 "$blacklist_file" | head -c -1 | tr '\n' '|'))" ) || (echo ::set-output name=exclude_files::" ")

      - name: Build proofs
        run: docker build -t verify-rust . --file docker/verify-rust.Dockerfile

      - name: Get number of Cores
        id: cores
        run: echo "::set-output name=num_cores::$(nproc --all)"

      - name: run seahorn proofs
        run: |
          docker run -t verify-rust /bin/bash -c "
          rm -Rf build && mkdir build && cd build &&
          cmake \
            -DCMAKE_C_COMPILER=clang-14 \
            -DCMAKE_CXX_COMPILER=clang++-14 \
            -DSEAHORN_ROOT=/home/usea/seahorn \
            -DRust_COMPILER=\$(rustup which rustc) \
            -DRust_CARGO=\$(rustup which cargo) \
            /home/usea/verify-rust -GNinja &&
          cmake --build . &&
          mkdir -p /tmp/verify-rust &&
          env VERIFY_FLAGS=\"${{ matrix.verify_flag }}\" \
            ctest \
            -j ${{ steps.cores.outputs.num_cores }} \
            --output-on-failure \
            --timeout 2000 \
            -E \"${{ steps.exclude_files.outputs.exclude_files }}\" \
            -R
          "

      - name: run benchmarks
        run: |
          docker run -t verify-rust /bin/bash -c "
          python3 /home/usea/verify-rust/benchmark/run_benchmark.py \
            --timeout_sec=1800 \
            --report-file=report.out \
            --mode=testcases \
            --cxx-compiler=clang++-14 \
            --c-compiler=clang-14 \
            --seahorn-root=/home/usea/seahorn \
            --rust-compiler=\$(rustup which rustc) \
            --rust-cargo=\$(rustup which cargo) \
            --testcases test_append,tinyvec-arrayvec
          "
