qname: CI

on:
  push:
    branches: main
  pull_request:
    branches: main
  schedule:
    - cron: 0 0 * * *  # run every day at UTC 00:00

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        verify_flag: ["", "--vac", "--cex"]
        ctest_flag: ["", "--label-exclude=\"skipvac\""]
        exclude:
          - verify_flag: ""
            ctest_flag: "--label-exclude=\"skipvac\""
          - verify_flag: "--cex"
            ctest_flag: "--label-exclude=\"skipvac\""
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Get type
        id: type
        run: echo ::set-output name=type::$(echo ${{ matrix.verify_flag }} | awk '{ print substr($1,3,5) "" substr($2,22) }')

      - name: Get Ctest opt
        id: ctest_opt
        run: echo ::set-output name=type::$(echo ${{ matrix.ctest_flag }} | awk '{ print substr($1,3,5) "" substr($2,22) }')

      - name: Get exclude test
        id: exclude_files
        run: (test -f ".github/workflows/blacklist.${{steps.type.outputs.type}}.txt" && echo ::set-output name=exclude_files::"($(cut -f 1 ".github/workflows/blacklist.${{steps.type.outputs.type}}.txt" | head -c -1 | tr '\n' '|'))" ) || (echo ::set-output name=exclude_files::" ")

      - name: Docker (Build tests)
        run: docker build -t verify-rust . --file docker/verify-rust.Dockerfile

      - name: Get number of Cores
        id: cores
        run: echo "::set-output name=num_cores::$(nproc --all)"

      - name: Run Tests
        run: docker run -t verify-rust /bin/bash -c "cd build && mkdir -p /tmp/verify-rust && env VERIFY_FLAGS=\"${{ matrix.verify_flag }}\" ctest \"${{ matrix.ctest_flag }}\"  -j ${{steps.cores.outputs.num_cores}} --output-on-failure --timeout 2000 -E \"${{ steps.exclude_files.outputs.exclude_files }}\""
